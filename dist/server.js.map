{"version":3,"sources":["../server.js"],"names":["port","process","env","PORT","server","createServer","configure","set","__dirname","layout","use","bodyParser","cookieParser","session","secret","static","router","error","err","req","res","next","render","locals","title","description","author","analyticssiteid","status","listen","console","log"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,OAAQC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAlC;;AAEA;AATA;AAUA,IAAMC,SAAS,kBAAQC,YAAR,EAAf;;AAEAD,OAAOE,SAAP,CAAiB,YAAM;AACnBF,SAAOG,GAAP,CAAW,OAAX,EAAoBC,YAAY,QAAhC;AACAJ,SAAOG,GAAP,CAAW,cAAX,EAA2B,EAAEE,QAAQ,KAAV,EAA3B;AACAL,SAAOM,GAAP,CAAW,kBAAQC,UAAR,EAAX;AACAP,SAAOM,GAAP,CAAW,kBAAQE,YAAR,EAAX;AACAR,SAAOM,GAAP,CAAW,kBAAQG,OAAR,CAAgB,EAAEC,QAAQ,aAAV,EAAhB,CAAX;AACAV,SAAOM,GAAP,CAAW,kBAAQK,MAAR,CAAeP,YAAY,SAA3B,CAAX;AACAJ,SAAOM,GAAP,CAAWN,OAAOY,MAAlB;AACH,CARD;;AAUA;AACAZ,OAAOa,KAAP,CAAa,UAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAClC,MAAIH,8BAAJ,EAA6B;AACzBE,QAAIE,MAAJ,CAAW,UAAX,EAAuB;AACrBC,cAAQ;AACNC,eAAQ,iBADF;AAENC,qBAAa,EAFP;AAGNC,gBAAQ,EAHF;AAINC,yBAAiB;AAJX,OADa;AAOrBC,cAAQ;AAPa,KAAvB;AASH,GAVD,MAUO;AACHR,QAAIE,MAAJ,CAAW,UAAX,EAAuB;AACrBC,cAAQ;AACNC,eAAQ,iCADF;AAENC,qBAAa,EAFP;AAGNC,gBAAQ,EAHF;AAINC,yBAAiB,SAJX;AAKNV,eAAOC;AALD,OADa;AAQrBU,cAAQ;AARa,KAAvB;AAUH;AACJ,CAvBD;;AAyBAxB,OAAOyB,MAAP,CAAc7B,IAAd;;AAEA;AACA,sBAAOI,MAAP;;AAEA;AACA,sBAAOA,MAAP;;AAEA0B,QAAQC,GAAR,CAAY,iCAAiC/B,IAA7C","file":"server.js","sourcesContent":["//setup Dependencies\nimport connect from 'connect'\nimport express from 'express'\nimport socket from './lib/socket'\nimport routes from './lib/routes'\nimport { NotFound } from './lib/utils'\n\nconst port = (process.env.PORT || 8081)\n\n//Setup Express\nconst server = express.createServer()\n\nserver.configure(() => {\n    server.set('views', __dirname + '/views')\n    server.set('view options', { layout: false })\n    server.use(connect.bodyParser())\n    server.use(express.cookieParser())\n    server.use(express.session({ secret: \"shhhhhhhhh!\"}))\n    server.use(connect.static(__dirname + '/static'))\n    server.use(server.router)\n})\n\n//setup the errors\nserver.error((err, req, res, next) => {\n    if (err instanceof NotFound) {\n        res.render('404.jade', {\n          locals: {\n            title : '404 - Not Found',\n            description: '',\n            author: '',\n            analyticssiteid: 'XXXXXXX'\n          },\n          status: 404\n        })\n    } else {\n        res.render('500.jade', {\n          locals: {\n            title : 'The Server Encountered an Error',\n            description: '',\n            author: '',\n            analyticssiteid: 'XXXXXXX',\n            error: err,\n          },\n          status: 500\n        })\n    }\n})\n\nserver.listen(port)\n\n//Socket.IO\nsocket(server)\n\n// ROUTES\nroutes(server)\n\nconsole.log('Listening on http://0.0.0.0:' + port )\n"]}